# python -m unittest tests.test_gene 
import unittest
from simulator.transcript import Transcript

# class GeneSetup(unittest.TestCase):
#     def setUp(self):
#         self.simple_gene = Gene("simulator/tests/testing_data/genes/basic_gene.json")
    
#     def tearDown(self):
#         self.simple_gene = None

class TranscriptCreationTests(unittest.TestCase): 
    def test_normal_gene(self):
        transcript = Transcript("GALK2", "chr15",49447955, 49622002, "+")
        print transcript

    def test_assert_raises(self):
        self.assertRaises(Transcript("random", "chr15",49447955, 49622002, "+"))

class TrascriptMethodTests(unittest.TestCase):
    def test_get_seq(self):
        transcript = Transcript("SOX9", "chr17",70117160, 70122560, "+")
        seq = transcript.get_seq()
        self.assertEquals(seq, "GGAGAGCCGAAAGCGGAGCTCGAAACTGACTGGAAACTTCAGTGGCGCGGAGACTCGCCAGTTTCAACCCCGGAAACTTTTCTTTGCAGGAGGAGAAGAGAAGGGGTGCAAGCGCCCCCACTTTTGCTCTTTTTCCTCCCCTCCTCCTCCTCTCCAATTCGCCTCCCCCCACTTGGAGCGGGCAGCTGTGAACTGGCCACCCCGCGCCTTCCTAAGTGCTCGCCGCGGTAGCCGGCCGACGCGCCAGCTTCCCCGGGAGCCGCTTGCTCCGCATCCGGGCAGCCGAGGGGAGAGGAGCCCGCGCCTCGAGTCCCCGAGCCGCCGCGGCTTCTCGCCTTTCCCGGCCACCAGCCCCCTGCCCCGGGCCCGCGTATGAATCTCCTGGACCCCTTCATGAAGATGACCGACGAGCAGGAGAAGGGCCTGTCCGGCGCCCCCAGCCCCACCATGTCCGAGGACTCCGCGGGCTCGCCCTGCCCGTCGGGCTCCGGCTCGGACACCGAGAACACGCGGCCCCAGGAGAACACGTTCCCCAAGGGCGAGCCCGATCTGAAGAAGGAGAGCGAGGAGGACAAGTTCCCCGTGTGCATCCGCGAGGCGGTCAGCCAGGTGCTCAAAGGCTACGACTGGACGCTGGTGCCCATGCCGGTGCGCGTCAACGGCTCCAGCAAGAACAAGCCGCACGTCAAGCGGCCCATGAACGCCTTCATGGTGTGGGCGCAGGCGGCGCGCAGGAAGCTCGCGGACCAGTACCCGCACTTGCACAACGCCGAGCTCAGCAAGACGCTGGGCAAGCTCTGGAGgtaggacccggcgggggcggcgcggcagggtgggcatcgcggcggctgggggcgctggtcagggctgatttgccccgccccgcctcccatcgcccgggagttgccgttccgggagccggcgggatggggttgggagtgggaatggggtgtaactgtggctcagagtttgacaaagttcttgggctgctcgcggggacgcggaggaggggggtggtaagtggaagaggtgagggaggtagctggaggatggacgaagactggtgggagacggaaggagggggctgccagcctgctctccagtcgcctggaagctcaatcggggcggggaagtgaaacttgcctccctcctacccggcctcttaaaactgcactctctcgtgcagccccactgtccacggagatggggcaagggagaaaccgaggttggaggagacccttggcaggaactgggaggcgggaggagggaggctactggaaataggtgggagtgtatggtggggggtgagaattggggaccttcttgcagcttaagtaatttgggggaaagttttcaaagggggttggggttgggggcggtaagtcgagcagcaaaggcgtttagggggcagcaccgggagtcgttttcatctccagcgtttccaaaatagaaatagaaggggaggggagggagggggcggggagtgaccgctcaggtcagactgcaataacttatttatttatttatttttaagaaaagttatgagctgtggttgcaggcaggagggaagatggagttgtgtgcagaggaagccgagtggtctgggtcgccgcctcctccccgccgacctgacagtttggcggatttcactgacccctctccctctttttctctgtgccccccgccccgccccgagcagACTTCTGAACGAGAGCGAGAAGCGGCCCTTCGTGGAGGAGGCGGAGCGGCTGCGCGTGCAGCACAAGAAGGACCACCCGGATTACAAGTACCAGCCGCGGCGGAGGAAGTCGGTGAAGAACGGGCAGGCGGAGGCAGAGGAGGCCACGGAGCAGACGCACATCTCCCCCAACGCCATCTTCAAGGCGCTGCAGGCCGACTCGCCACACTCCTCCTCCGGCATGAGCGAGGTGCACTCCCCCGGCGAGCACTCGGgtgagtcgcccctcgaccccaccggacaagctatctccgtcccgcctggcacaccccctgccctccgcctgggagattcttcgtggggactttatgcttcccgggagggacacactgccctttgcgcccgtcccgctcccctctctacccagagcctaagaggcatccaaacaacacacacacaaacacacacaccccaactcaatcccagcatccgaagagattaacttttttattgggaggtaaaatgcccttaacagccttacaagacctctcccttcttctctgctcccccaccccaaaagcacacacagggctcttacacaagtagcaattaggtcttccggaccctccgggccccagaccctcccctgataaaagggggctgtccagtgtgtaccggcgggttaatcattgggcgacttatctccggtgcagcgcgcctcttgcgcgggtgcgggcccttattacactttagcagcgagggagggtccccggagggtgcctaagactagggcgtctgcacagcccttgttgattttctcgtgcttgttcttttattgtccacagGGCAATCCCAGGGCCCACCGACCCCACCCACCACCCCCAAAACCGACGTGCAGCCGGGCAAGGCTGACCTGAAGCGAGAGGGGCGCCCCTTGCCAGAGGGGGGCAGACAGCCCCCTATCGACTTCCGCGACGTGGACATCGGCGAGCTGAGCAGCGACGTCATCTCCAACATCGAGACCTTCGATGTCAACGAGTTTGACCAGTACCTGCCGCCCAACGGCCACCCGGGGGTGCCGGCCACGCACGGCCAGGTCACCTACACGGGCAGCTACGGCATCAGCAGCACCGCGGCCACCCCGGCGAGCGCGGGCCACGTGTGGATGTCCAAGCAGCAGGCGCCGCCGCCACCCCCGCAGCAGCCCCCACAGGCCCCGCCGGCCCCGCAGGCGCCCCCGCAGCCGCAGGCGGCGCCCCCACAGCAGCCGGCGGCACCCCCGCAGCAGCCACAGGCGCACACGCTGACCACGCTGAGCAGCGAGCCGGGCCAGTCCCAGCGAACGCACATCAAGACGGAGCAGCTGAGCCCCAGCCACTACAGCGAGCAGCAGCAGCACTCGCCCCAACAGATCGCCTACAGCCCCTTCAACCTCCCACACTACAGCCCCTCCTACCCGCCCATCACCCGCTCACAGTACGACTACACCGACCACCAGAACTCCAGCTCCTACTACAGCCACGCGGCAGGCCAGGGCACCGGCCTCTACTCCACCTTCACCTACATGAACCCCGCTCAGCGCCCCATGTACACCCCCATCGCCGACACCTCTGGGGTCCCTTCCATCCCGCAGACCCACAGCCCCCAGCACTGGGAACAACCCGTCTACACACAGCTCACTCGACCTTGAGGAGGCCTCCCACGAAGGGCGAAGATGGCCGAGATGATCCTAAAAATAACCGAAGAAAGAGAGGACCAACCAGAATTCCCTTTGGACATTTGTGTTTTTTTGTTTTTTTATTTTGTTTTGTTTTTTCTTCTTCTTCTTCTTCCTTAAAGACATTTAAGCTAAAGGCAACTCGTACCCAAATTTCCAAGACACAAACATGACCTATCCAAGCGCATTACCCACTTGTGGCCAATCAGTGGCCAGGCCAACCTTGGCTAAATGGAGCAGCGAAATCAACGAGAAACTGGACTTTTTAAACCCTCTTCAGAGCAAGCGTGGAGGATGATGGAGAATCGTGTGATCAGTGTGCTAAATCTCTCTGCCTGTTTGGACTTTGTAATTATTTTTTTAGCAGTAATTAAAGAAAAAAGTCCTCTGTGAGGAATATTCTCTATTTTAAATATTTTTAGTATGTACTGTGTATGATTCATTACCATTTTGAGGGGATTTATACATATTTTTAGATAAAATTAAATGCTCTTATTTTTCCAACAGCTAAACTACTCTTAGTTGAACAGTGTGCCCTAGCTTTTCTTGCAACCAGAGTATTTTTGTACAGATTTGCTTTCTCTTACAAAAAGAAAAAAAAAATCCTGTTGTATTAACATTTAAAAACAGAATTGTGTTATGTGATCAGTTTTGGGGGTTAACTTTGCTTAATTCCTCAGGCTTTGCGATTTAAGGAGGAGCTGCCTTAAAAAAAAATAAAGGCCTTATTTTGCAATTATGGGAGTAAACAATAGTCTAGAGAAGCATTTGGTAAGCTTTATCATATATATATTTTTTAAAGAAGAGAAAAACACCTTGAGCCTTAAAACGGTGCTGCTGGGAAACATTTGCACTCTTTTAGTGCATTTCCTCCTGCCTTTGCTTGTTCACTGCAGTCTTAAGAAAGAGGTAAAAGGCAAGCAAAGGAGATGAAATCTGTTCTGGGAATGTTTCAGCAGCCAATAAGTGCCCGAGCACACTGCCCCCGGTTGCCTGCCTGGGCCCCATGTGGAAGGCAGATGCCTGCTCGCTCTGTCACCTGTGCCTCTCAGAACACCAGCAGTTAACCTTCAAGACATTCCACTTGCTAAAATTATTTATTTTGTAAGGAGAGGTTTTAATTAAAACAAAAAAAAATTCTTTTTTTTTTTTTTTTCCAATTTTACCTTCTTTAAAATAGGTTGTTGGAGCTTTCCTCAAAGGGTATGGTCATCTGTTGTTAAATTATGTTCTTAACTGTAACCAGTTTTTTTTTATTTATCTCTTTAATCTTTTTTTATTATTAAAAGCAAGTTTCTTTGTATTCCTCACCCTAGATTTGTATAAATGCCTTTTTGTCCATCCCTTTTTTCTTTGTTGTTTTTGTTGAAAACAAACTGGAAACTTGTTTCTTTTTTTGTATAAATGAGAGATTGCAAATGTAGTGTATCACTGAGTCATTTGCAGTGTTTTCTGCCACAGACCTTTGGGCTGCCTTATATTGTGTGTGTGTGTGGGTGTGTGTGTGTTTTGACACAAAAACAATGCAAGCATGTGTCATCCATATTTCTCTGCATCTTCTCTTGGAGTGAGGGAGGCTACCTGGAGGGGATCAGCCCACTGACAGACCTTAATCTTAATTACTGCTGTGGCTAGAGAGTTTGAGGATTGCTTTTTAAAAAAGACAGCAAACTTTTTTTTTTATTTAAAAAAAGATATATTAACAGTTTTAGAAGTCAGTAGAATAAAATCTTAAAGCACTCATAATATGGCATCCTTCAATTTCTGTATAAAAGCAGATCTTTTTAAAAAGATACTTCTGTAACTTAAGAAACCTGGCATTTAAATCATATTTTGTCTTTAGGTAAAAGCTTTGGTTTGTGTTCGTGTTTTGTTTGTTTCACTTGTTTCCCTCCCAGCCCCAAACCTTTTGTTCTCTCCGTGAAACTTACCTTTCCCTTTTTCTTTCTCTTTTTTTTTTTTGTATATTATTGTTTACAATAAATATACATTGCATTAAAAAGAA".upper())

    def test_get_exons(self):
        transcript = Transcript("SOX9", "chr17",70117160, 70122560, "+")
        seq = transcript.get_exons()

if __name__ == '__main__':
    unittest.main()